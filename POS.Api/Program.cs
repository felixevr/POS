using POS.Infrastructure.Extensions;
using POS.Application.Extensions;
using POS.Api.Controllers;
using AssemblyExample;


var builder = WebApplication.CreateBuilder(args);
var Configuration = builder.Configuration; // Added

// Add services to the container.
builder.Services.AddInjectionInfrastructure(Configuration); // Added
builder.Services.AddInjectionApplication(Configuration); // Added

builder.Services.AddControllers();

// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

// ------------------------- METODO CONEXIÓN A DB -------------------------------
// Generated by Scaffolding proccess
//protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//{
//    if (!optionsBuilder.IsConfigured)
//    {
//        //#warning To protect potentially sensitive information in your connection string, you should move it out of source code. 
//        //You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148.
//        //For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
//        optionsBuilder.UseSqlServer("Server=DESKTOP-2799MO7\\MSSQLSERVERDEV;Database=POS;Trusted_Connection=True;");
//    }
//}
//--------------------------------------------------------------------------------

var app = builder.Build();

// Configure the HTTP request pipeline.
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

app.UseHttpsRedirection();

app.UseAuthorization();

//**************** Mi ****************************

// ListCategories(BaseFiltersRequest filters);
var testing = new SampleClass();
testing.Main();
//**************** Mi ****************************

app.MapControllers();

app.Run();

